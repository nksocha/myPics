{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/modules/galleries.js","src/modules/home.js","src/modules/list.js","src/resources/index.js","src/resources/data/data-services.js","src/resources/data/galleries.js","src/resources/data/mypics.js","src/resources/data/users.js","src/resources/value-converters/completed.js","src/resources/value-converters/date-format.js"],"names":["App","configureRouter","config","router","addPipelineStep","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","window","regeneratorRuntime","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","GalleriesList","galleries","user","JSON","parse","sessionStorage","getItem","title","showGalleries","logout","removeItem","navigate","createGalleries","galleriesObj","description","userId","_id","saveGalleries","save","response","error","alert","activate","getUserGalleries","editGalleries","deleteGalleries","back","showGalleriesOrAdd","setItem","stringify","Home","users","message","showLogin","loginError","showRegister","firstName","lastName","email","password","registerError","serverResponse","login","catch","console","log","MypicGalleries","mypic","editMypic2","showMypics","saveMypic","mypicsObj","mypicId","filesToUpload","length","uploadFile","createMypic","galleryId","getUserMypic","changeFiles","Array","push","files","removeFile","index","splice","deleteMypic","editMypic","saveEditedMypic","mypicObj2","saveEdited","back2","globalResources","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","localStorage","append","method","url","status","get","fetch","json","data","post","content","body","object","put","delete","uploadFiles","Galleries","GALLERIES_SERVICE","galleriesArray","id","galleriesId","formData","FormData","forEach","item","GalleriesId","i","Mypics","MYPIC_SERVICE","mypicsArray","Users","USER_SERVICE","CompletedValueConverter","toView","array","value","filter","completed","DateFormatValueConverter","undefined","format"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\nimport {AuthorizeStep} from 'aurelia-auth';\n\n\nexport class App {\n  configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep); \n    config.map([\n      { \n        route: ['', 'home'],\n        moduleId: './modules/home',\n        name: 'Home' \n      },\n      {\n        route: 'list',\n        moduleId: './modules/list',\n        name: 'List', \n        auth: true \n     },\n     \n     {\n      route: 'galleries',\n      moduleId: './modules/galleries',\n      name: 'Galleries', \n      auth: true \n   }\n\n    ]);\n  }\n}\n","var authConfig = {\r\n    baseUrl: \"http://localhost:5000/api\",\r\n    loginUrl: '/users/login',\r\n    tokenName: 'token',\r\n    authHeader: 'Authorization',\r\n    authToken: '',\r\n    logoutRedirect: '#/home'\r\n  }\r\n  \r\n  export default authConfig;\r\n  ","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport config from './auth-config';\nimport regeneratorRuntime from 'regenerator-runtime';\nwindow.regeneratorRuntime = regeneratorRuntime;\n\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig)=>{\n      baseConfig.configure(config);\n })\n\n    .feature('resources')\n    .plugin('aurelia-auth', (baseConfig)=>{\n      baseConfig.configure(config);\n })\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {Galleries} from '../resources/data/galleries';\r\nimport { AuthService } from 'aurelia-auth';\r\n\r\n@inject(Router, Galleries, AuthService)\r\nexport class GalleriesList {\r\n  constructor(router, galleries, auth) {\r\n    this.galleries = galleries;\r\n    this.router = router;\r\n    this.auth = auth;\r\n    this.user = JSON.parse(sessionStorage.getItem('user'));\r\n    this.title = \"These are you galleries!\";\r\n    this.showGalleries = true;\r\n      }\r\n\r\n  logout() {\r\n    sessionStorage.removeItem('user');\r\n    this.auth.logout();\r\n    this.router.navigate('home');\r\n  }\r\n\r\n  createGalleries() {\r\n    this.galleriesObj = {\r\n      galleries: '',\r\n      description: '',\r\n      userId: this.user._id,\r\n    };\r\n    this.showGalleries = false;\r\n  }\r\n \r\n  async saveGalleries() {\r\n    if (this.galleriesObj) {\r\n      let response = await this.galleries.save(this.galleriesObj);\r\n      if (response.error) {\r\n        alert('There was an error creating the Galleries');\r\n      } else {\r\n              }\r\n    }\r\n    this.showGalleries = true;\r\n  }\r\n  async activate() {\r\n    await this.galleries.getUserGalleries(this.user._id);\r\n  }\r\n  editGalleries(galleries) {\r\n    this.galleriesObj = galleries;\r\n    this.showGalleries = false;\r\n    \r\n  }\r\n  deleteGalleries(galleries) {\r\n    this.galleries.deleteGalleries(galleries._id);\r\n  }\r\n\r\n  back() {\r\n    this.showGalleries = true;\r\n  }\r\n  showGalleriesOrAdd(galleries) {  \r\n    sessionStorage.setItem(\"galleries\", JSON.stringify(galleries));\r\n      this.router.navigate('list');   \r\n    };\r\n \r\n}\r\n\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport { Users } from '../resources/data/users';\r\nimport {AuthService} from 'aurelia-auth';\r\n\r\n@inject(Router, Users, AuthService)\r\nexport class Home {\r\n  constructor(router, users, auth) {\r\n    this.router = router;\r\n    this.users = users;\r\n    this.message = 'My Pics Home';\r\n    this.showLogin = true;\r\n    this.auth = auth;\r\n    this.loginError = '';\r\n\r\n  }\r\n\r\n  showRegister(){\r\n    this.user = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n        }\r\n    this.registerError = \"\";       \r\n  this.showLogin = false;\r\n}\r\n\r\n    async save() {\r\n          let serverResponse = await this.users.save(this.user);\r\n          if (!serverResponse.error) {\r\n            this.showLogin = true;\r\n          } else {\r\n            this.registerError = \"There was a problem registering the user.\"\r\n          }\r\n    }\r\n    \r\n    login() {\r\n      return this.auth.login(this.email, this.password)\r\n        .then(response => {\r\n          sessionStorage.setItem(\"user\", JSON.stringify(response.user));\r\n          this.loginError = \"\";\r\n          this.router.navigate('galleries');\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          this.loginError = \"Invalid credentials.\";\r\n        });\r\n    };\r\n  \r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {Mypics} from '../resources/data/mypics';\r\nimport { AuthService } from 'aurelia-auth';\r\n\r\n@inject(Router, Mypics, AuthService)\r\nexport class MypicGalleries {\r\n  constructor(router, mypic, auth) {\r\n    this.mypic = mypic;\r\n    this.router = router;\r\n    this.auth = auth;\r\n    this.galleries = JSON.parse(sessionStorage.getItem('galleries'));\r\n    this.editMypic2 = JSON.parse(sessionStorage.getItem('mypic'));\r\n    this.user = JSON.parse(sessionStorage.getItem('user'));\r\n    this.showMypics = true;\r\n  }\r\n\r\n  async saveMypic() {\r\n    if (this.mypicsObj) {\r\n      let response = await this.mypic.save(this.mypicsObj);\r\n      if (response.error) {\r\n        alert('There was an error uploading the Photo');\r\n      } else {\r\n        var mypicId = response._id;\r\n        // var galleriesId = response.galleriesId;\r\n        if (this.filesToUpload && this.filesToUpload.length) {\r\n          await this.mypic.uploadFile(this.filesToUpload, this.galleries._id,  mypicId);\r\n          this.filesToUpload = [];\r\n        }\r\n      }\r\n    }\r\n\r\n    this.showMypics = true;\r\n  }\r\n\r\n  createMypic() {\r\n    this.mypicsObj = {\r\n      mypic: '',\r\n      description: '',\r\n      userId: this.user._id,\r\n      galleryId: this.galleries._id\r\n    };\r\n    this.showMypics = false;\r\n  }\r\n\r\n  async activate() {\r\n    await this.mypic.getUserMypic(this.galleries._id);\r\n  }\r\n  changeFiles() {\r\n    this.filesToUpload = new Array();\r\n    this.filesToUpload.push(this.files[0]);\r\n  }\r\n  removeFile(index) {\r\n    this.filesToUpload.splice(index, 1);\r\n  }\r\n\r\n  deleteMypic(mypic) {\r\n      this.mypic.deleteMypic(mypic._id);\r\n  }\r\n\r\n  editMypic(mypic) {\r\n    this.mypicsObj = mypic;\r\n    this.showMypics = false;\r\n  }\r\n\r\n  async saveEditedMypic() {\r\n    if (this.mypicObj2) {\r\n      let response = await this.mypic.saveEdited(this.mypicObj2);\r\n      if (response.error) {\r\n        alert('There was an error updating the photo details');\r\n      } else {\r\n              }\r\n    }\r\n    this.showMypics = true;\r\n  }\r\n  back() {\r\n    this.router.navigate('galleries');\r\n  }\r\n\r\n  back2() {\r\n    this.showMypics = true;\r\n  }\r\n}\r\n","export function configure(config) {\n  config.globalResources([\n  './value-converters/date-format',\n  './value-converters/completed'\n]);\n  \n}","import { inject } from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class DataServices {\r\n\r\n    constructor(http) {\r\n\t\tthis.httpClient = http;\r\n\t\tthis.BASE_URL = \"http://localhost:5000/api/\";\r\n\r\n\t\tthis.httpClient.configure(config => {\r\n\t\tconfig\r\n\t\t\t.withBaseUrl(this.BASE_URL)\r\n\t\t\t.withDefaults({\r\n\t\t\tcredentials: 'same-origin',\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'X-Requested-With': 'Fetch'\r\n\t\t\t}\r\n\t\t\t})\r\n\t\t\t.withInterceptor({\r\n\t\t\trequest(request) {\r\n\t\t\t\tvar authHeader = 'Bearer ' + localStorage.getItem('aurelia_token')\r\n\t\t\t\trequest.headers.append('Authorization', authHeader);\t\t\t\r\n\t\t\t\tconsole.log(`Requesting ${request.method} ${request.url}`);\r\n\t\t\t\treturn request;\r\n\t\t\t},\r\n\t\t\tresponse(response) {\r\n\t\t\t\tconsole.log(`Received ${response.status} ${response.url}`);\r\n\t\t\t\treturn response;\r\n\t\t\t}\r\n\t\t\t});\r\n        });\r\n    }\r\n\r\n    get(url) {\r\n\t\treturn this.httpClient.fetch(url)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\treturn data;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n    }\r\n\r\n    post(content, url) {\r\n        console.log(content)\r\n        console.log(url)\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\tbody: json(content)\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n    }\r\n\r\n    put(content, url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'put',\r\n\t\t\t\tbody: json(content)\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n\t}\r\n\r\n    delete(url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'delete'\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error ;\r\n\t\t\t});\r\n\t}\r\n\r\n\tuploadFiles(files, url){\r\n\t\t    return this.httpClient\r\n\t\t    .fetch(url, {\r\n\t\t        method: 'post',\r\n\t\t        body: files\r\n\t\t    })\r\n\t\t    .then(response => response.json())\r\n\t\t    .then(object => {\r\n\t\t        return object;\r\n\t\t    })\r\n\t\t    .catch(error => {\r\n\t\t        return error;\r\n\t\t    });\r\n\t\t}\r\n\t\t\r\n}","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n\r\n@inject(DataServices)\r\nexport class Galleries {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.GALLERIES_SERVICE = 'galleries';\r\n       this.galleriesArray = [];\r\n}\r\nasync getUserGalleries(id){\r\n    let response = await this.data.get(this.GALLERIES_SERVICE + \"/user/\" + id);\r\n    if(!response.error && !response.message){\r\n        this.galleriesArray = response;\r\n    }\r\n}\r\n\r\n\r\nasync save(galleries){\r\n        if(galleries){\r\n            if(!galleries._id){\r\n                let response = await this.data.post(galleries, this.GALLERIES_SERVICE);\r\n                if(!response.error){\r\n                    this.galleriesArray.push(response);\r\n                }\r\n                return response;\r\n            } else {\r\n                let response = await this.data.put(galleries, this.GALLERIES_SERVICE + \"/\" + galleries._id);\r\n                if(!response.error){\r\n                    // this.updateArray(response);\r\n                }\r\n                return response;\r\n            }\r\n        }\r\n}\r\nasync uploadFile(files, userId, galleriesId){\r\n            let formData = new FormData();\r\n            files.forEach((item, index) => {\r\n                formData.append(\"file\" + index, item);\r\n            });\r\n        \r\n        let response = await this.data.uploadFiles(formData, this.GALLERIES_SERVICE + \"/upload/\" + userId + \"/\" + GalleriesId);\r\n        return response;\r\n    }\r\n    \r\n\r\n    async deleteGalleries(id){\r\n\t\tlet response = await this.data.delete(this.GALLERIES_SERVICE + \"/\" + id);\r\n\t\tif(!response.error){\r\n\t\t\tfor(let i = 0; i < this.galleriesArray.length; i++){\r\n\t\t\t\tif(this.galleriesArray[i]._id === id){\r\n\t\t\t\t\tthis.galleriesArray.splice(i,1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import { inject } from 'aurelia-framework';\r\nimport { DataServices } from './data-services';\r\n@inject(DataServices)\r\nexport class Mypics {\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.MYPIC_SERVICE = 'mypics';\r\n        this.GALLERIES_SERVICE = 'galleries';\r\n        this.mypicsArray = [];\r\n    }\r\n\r\n    async save(mypic) {\r\n        if (mypic) {\r\n            if (!mypic._id) {\r\n                let response = await this.data.post(mypic, this.MYPIC_SERVICE);\r\n                if (!response.error) {\r\n                    this.mypicsArray.push(response);\r\n                }\r\n                return response;\r\n            } else {\r\n                let response = await this.data.put(mypic, this.GALLERIES_SERVICE + \"/\" + this.MYPIC_SERVICE + \"/\" + mypic._id);\r\n                if (!response.error) {\r\n                    // this.updateArray(response);\r\n                }\r\n                return response;\r\n            }\r\n        }\r\n    }\r\n\r\n    async uploadFile(files, galleriesId, mypicId) {\r\n        let formData = new FormData();\r\n        files.forEach((item, index) => {\r\n            formData.append(\"file\" + index, item);\r\n        });\r\n        let response = await this.data.uploadFiles(formData, this.MYPIC_SERVICE + \"/upload/\" + galleriesId + \"/\" + mypicId);\r\n        return response;\r\n    }\r\n\r\n    async getUserMypic(galleriesId) {\r\n        let response = await this.data.get(this.MYPIC_SERVICE + \"/gallery/\" + galleriesId);\r\n        if (!response.error && !response.message) {\r\n            this.mypicsArray = response;\r\n        }\r\n    }\r\n\r\n    async deleteMypic(id) {\r\n        let response = await this.data.delete(this.MYPIC_SERVICE  + \"/\" + id);\r\n        if (!response.error) {\r\n            for (let i = 0; i < this.mypicsArray.length; i++) {\r\n                if (this.mypicsArray[i]._id === id) {\r\n                    this.mypicsArray.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async saveEdited(mypic) {\r\n        if (mypic) {\r\n            let response = await this.data.put(mypic, this.GALLERIES_SERVICE + \"/\" + this.MYPIC_SERVICE + \"/\" + mypic._id);\r\n            if (!response.error) {\r\n                // this.updateArray(response);\r\n            }\r\n            return response;\r\n        }\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class Users {\r\n    \r\n    constructor(data) {\r\n        this.data = data;\r\n        this.USER_SERVICE = 'users';\r\n    }\r\n\r\n    async save(user){\r\n        if(user){\r\n           \r\n                let serverResponse = await this.data.post(user, this.USER_SERVICE);\r\n                return serverResponse;\r\n           \r\n        }\r\n    }\r\n\r\n}\r\n","export class CompletedValueConverter {\r\n      \r\n       toView(array, value) {\r\n         if(!value){\r\n          return array.filter(item => {\r\n            return !item.completed;\r\n          })\r\n         } else {\r\n           return array;\r\n         }\r\n       }\r\n      }\r\n    ","import moment from 'moment';\r\nexport class DateFormatValueConverter {\r\ntoView(value) {\r\nif(value === undefined || value === null){\r\n\treturn;\r\n    \t\t}\r\n    \r\n    \t\treturn moment(value).format('MMM Do YYYY');\r\n\t}\r\n}"],"sourceRoot":".."}